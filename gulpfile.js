var gulp = require('gulp');
var react = require('gulp-react');
var plugins = require('gulp-load-plugins')();
var connect = require('gulp-connect');
var url = require('url');
var proxy = require("proxy-middleware");

var proxyOptions = url.parse('http://localhost:9000')
proxyOptions.route = '/api';
var middlewares = [proxy(proxyOptions)];

gulp.task('connect', function () {
  return connect.server({
    root: './',
    livereload: true,
    middleware: function (connect, opt) {
      return middlewares;
    }
    
    
  });
});

gulp.task('jsx', function (){
  return gulp.src('src/js/**/*.js')
    //.pipe(plugins.cached('jsx'))
    .pipe(plugins.react())
    .on('error', plugins.util.log)
    .pipe(gulp.dest('build/js/'))
    .pipe(connect.reload());
});

gulp.task('sass', function() {
  return gulp.src('src/scss/main.scss')
    .pipe(plugins.sourcemaps.init())
    .pipe(plugins.sass())
    .pipe(plugins.sourcemaps.write({includeContent: false}))
    .pipe(plugins.sourcemaps.init({loadMaps: true})) // Load sourcemaps generated by sass
    //.pipe(plugins.autoprefixer({
    //  browsers: ['last 2 versions']
    //}))8
    .on('error', plugins.util.log)
    .pipe(plugins.sourcemaps.write('.'))
    .pipe(gulp.dest('./build/css'))
    .on('error', plugins.util.log)
    .pipe(connect.reload());
});


gulp.task('serve', ['jsx', 'sass'], function (){
  gulp.watch('src/**/*.js', function (){
    gulp.start('jsx');
  });

  gulp.watch('src/scss/*.scss', function (){
    gulp.start('sass');  
  });
});


gulp.task('default',['serve', 'connect']);
